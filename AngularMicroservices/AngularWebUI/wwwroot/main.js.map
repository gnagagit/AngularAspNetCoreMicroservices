{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/app.settings.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,yBAAyB,kEAAkE,gCAAgC,kBAAkB,KAAK,eAAe,+BAA+B,qBAAqB,OAAO,4BAA4B,kCAAkC,OAAO,kBAAkB,+BAA+B,OAAO,YAAY,0BAA0B,6BAA6B,yBAAyB,kCAAkC,qBAAqB,OAAO,K;;;;;;;;;;;ACAnf,67BAA67B,uBAAuB,wUAAwU,aAAa,uBAAuB,eAAe,waAAwa,YAAY,uBAAuB,qBAAqB,uL;;;;;;;;;;;;;;;;;;;;;;;;;ACArwD;AACC;AAO3C;IAWE,sBAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAV1C,yBAAyB;QACzB,kBAAa,GAAY,KAAK,CAAC;QAC/B,iBAAY,GAAY,KAAK,CAAC;QAC9B,cAAS,GAAQ,EAAE,CAAC;QACpB,aAAQ,GAAQ,EAAE,CAAC;QACnB,kBAAa,GAAW,yBAAyB,CAAC;QAClD,iBAAY,GAAW,wBAAwB,CAAC;QAChD,4BAAuB,GAAW,uCAAuC,CAAC;QAC1E,2BAAsB,GAAW,sCAAsC,CAAC;QAGtE,IAAI,CAAC,SAAS,GAAG;YACf,EAAE,YAAY,EAAE,KAAK,EAAE;SACxB,CAAC;IACJ,CAAC;IAED,mCAAY,GAAZ;QACE,IAAI,CAAC,SAAS,GAAG;YACf,EAAE,YAAY,EAAE,KAAK,EAAE;SACxB,CAAC;IACJ,CAAC;IAED,uCAAgB,GAAhB;QAAA,iBAWC;QAVC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAC1C,UAAC,IAAI;YACH,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;QACH,4BAA4B;IAC9B,CAAC;IAGD,sCAAe,GAAf;QAAA,iBAWC;QAVC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,UAAU,CAAC,eAAe,EAAE,CAAC,SAAS,CACzC,UAAC,IAAI;YACH,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACnB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;QACJ,4BAA4B;IAC7B,CAAC;IAGD,iDAA0B,GAA1B;QAAA,iBAWC;QAVC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,UAAU,CAAC,8BAA8B,EAAE,CAAC,SAAS,CACxD,UAAC,IAAI;YACH,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;QACL,sCAAsC;IACxC,CAAC;IAED,gDAAyB,GAAzB;QAAA,iBAYC;QAVC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,UAAU,CAAC,6BAA6B,EAAE,CAAC,SAAS,CACvD,UAAC,IAAI;YACH,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;QACL,qCAAqC;IACvC,CAAC;IA5EU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAYgC,uDAAU;OAX/B,YAAY,CA8ExB;IAAD,mBAAC;CAAA;AA9EwB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRiC;AACjB;AAEM;AACS;AACb;AACE;AAgB7C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAdrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,qEAAgB;aACjB;YACD,SAAS,EAAE;gBACT,uDAAU;gBACV,yDAAW;aACZ;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrByC;AACpB;AACE;AAE7C,uBAAuB;AACvB,8BAA8B;AAC9B,yCAAyC;AACzC,uCAAuC;AACvC,MAAM;AACN,IAAI;AAGJ;IAEE,oBAAoB,UAAsB,EAAU,WAAwB;QAAxD,eAAU,GAAV,UAAU,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAa;IAE5E,CAAC;IAGD,qCAAgB,GAAhB;QACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,gBAAgB,GAAG,YAAY,CAAC,CAAC;IAC/E,CAAC;IAED,oCAAe,GAAf;QACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,GAAG,WAAW,CAAC,CAAC;IAC7E,CAAC;IAED,mDAA8B,GAA9B;QACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAiB,GAAG,YAAY,CAAC,CAAC;IAChF,CAAC;IAED,kDAA6B,GAA7B;QACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAiB,GAAG,WAAW,CAAC,CAAC;IAC/E,CAAC;IArBU,UAAU;QADtB,gEAAU,EAAE;yCAGqB,+DAAU,EAAuB,yDAAW;OAFjE,UAAU,CAuBtB;IAAD,iBAAC;CAAA;AAvBsB;;;;;;;;;;;;;;ACbvB;AAAA;IAAA;QACS,qBAAgB,GAAW,6BAA6B,CAAC;QACzD,oBAAe,GAAW,6BAA6B,CAAC;QACxD,sBAAiB,GAAW,6BAA6B,CAAC;IACnE,CAAC;IAAD,kBAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACJD;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"table {\\r\\n  font-family: \\\"Trebuchet MS\\\", Arial, Helvetica, sans-serif;\\r\\n  border-collapse: collapse;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\ntd,th {\\r\\n    border: 1px solid #ddd;\\r\\n    padding: 8px;\\r\\n  }\\r\\n\\r\\ntr:nth-child(even) {\\r\\n    background-color: #f2f2f2;\\r\\n  }\\r\\n\\r\\ntr:hover {\\r\\n    background-color: #ddd;\\r\\n  }\\r\\n\\r\\nth {\\r\\n    padding-top: 12px;\\r\\n    padding-bottom: 12px;\\r\\n    text-align: left;\\r\\n    background-color: #4CAF50;\\r\\n    color: white;\\r\\n  }\\r\\n\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div style=\\\"text-align:center\\\">\\r\\n  <h1><strong>Angular with AspNet Core Microservices and API Gateway</strong></h1>\\r\\n</div>\\r\\n<br /><br />  <br /><br /> \\r\\n<div>\\r\\n  <button (click)='onCustomersClick()'><strong>View Customers Microservices</strong> </button>\\r\\n  <br /><br />\\r\\n  <button (click)='onProductsClick()'><strong>View Products Microservices</strong></button>\\r\\n  <br /><br />\\r\\n  <button (click)='onAPIGatewayCustomersClick()'><strong>View APIGateway Customers Microservices</strong></button>\\r\\n  <br /><br />\\r\\n  <button (click)='onAPIGatewayProductsClick()'><strong>View APIGateway Products Microservices</strong></button>\\r\\n</div>\\r\\n<br /><br /> <br /><br />\\r\\n\\r\\n<!--<div>\\r\\n  <button (click)='getcustomers()'><strong>Customer Name</strong> </button>\\r\\n  <br /><br />\\r\\n</div>\\r\\n<div *ngFor='let customer of customers'>\\r\\n  <p>{{customer.customername}}</p>\\r\\n</div>\\r\\n<p *ngIf=\\\"!customers || customers.length==0\\\">NO JSON Data</p>-->\\r\\n\\r\\n\\r\\n<div *ngIf=\\\"showCustomers\\\">\\r\\n  <table>\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <td>ID</td>\\r\\n        <td>Name</td>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor='let customer of customers'>\\r\\n        <td>{{customer.id}}</td>\\r\\n        <td>{{customer.name}}</td>\\r\\n      </tr>\\r\\n      <tr *ngIf=\\\"!customers || customers.length==0\\\">\\r\\n        <td colspan=\\\"2\\\">NO JSON Data</td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"showProducts\\\">\\r\\n  <table>\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <td>ID</td>\\r\\n        <td>Description</td>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor='let product of products'>\\r\\n        <td>{{product.id}}</td>\\r\\n        <td>{{product.description}}</td>\\r\\n      </tr>\\r\\n      <tr *ngIf=\\\"!products || products.length==0\\\">\\r\\n        <td colspan=\\\"2\\\">NO JSON Data</td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { AppService } from './app.service';\r\nimport { debug } from 'util';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  //title = 'AngularWebUI';\r\n  showCustomers: boolean = false;\r\n  showProducts: boolean = false;\r\n  customers: any = [];\r\n  products: any = [];\r\n  CustomersData: string = 'This is Customers Click';\r\n  ProductsData: string = 'This is Products Click';\r\n  APIGatewayCustomersData: string = 'This API Gateway Customers Data Click';\r\n  APIGatewayProductsData: string = 'This API Gateway Products Data Click';\r\n\r\n  constructor(private appService: AppService) {\r\n    this.customers = [\r\n      { customername: 'XYZ' },\r\n    ];\r\n  }\r\n\r\n  getcustomers(): void {\r\n    this.customers = [\r\n      { customername: 'ABC' },\r\n    ];\r\n  }\r\n   \r\n  onCustomersClick(): void {\r\n    this.showCustomers = true;\r\n    this.showProducts = false;\r\n    this.customers = [];\r\n    this.products = [];\r\n    this.appService.GetCustomersData().subscribe(\r\n      (data) => {\r\n        this.customers = data;\r\n          console.log(data);\r\n    });\r\n    //alert(this.CustomersData);\r\n  }\r\n\r\n\r\n  onProductsClick(): void {\r\n    this.showProducts = true;\r\n    this.showCustomers = false;\r\n    this.customers = [];\r\n    this.products = [];\r\n    this.appService.GetProductsData().subscribe(\r\n      (data) => {\r\n        this.products = data;\r\n          console.log(data);\r\n    });\r\n   // alert(this.ProductsData);\r\n  }\r\n\r\n\r\n  onAPIGatewayCustomersClick(): void {\r\n    this.showCustomers = true;\r\n    this.showProducts = false;\r\n    this.customers = [];\r\n    this.products = [];\r\n    this.appService.GetCustomersDataFromAPIGateway().subscribe(\r\n      (data) => {\r\n        this.customers = data;\r\n        console.log(data);\r\n      });\r\n    //alert(this.APIGatewayCustomersData);\r\n  }\r\n\r\n  onAPIGatewayProductsClick(): void {\r\n\r\n    this.showProducts = true;\r\n    this.showCustomers = false;\r\n    this.customers = [];\r\n    this.products = [];\r\n    this.appService.GetProductsDataFromAPIGateway().subscribe(\r\n      (data) => {\r\n        this.products = data;\r\n        console.log(data);\r\n      });\r\n    //alert(this.APIGatewayProductsData);\r\n  }\r\n  \r\n}\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppService } from './app.service';\nimport { AppSettings } from './app.settings';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [\n    AppService,\n    AppSettings\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Observable } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AppSettings } from './app.settings';\r\n\r\n//const httpOptions = {\r\n//  headers: new HttpHeaders({\r\n//    'Content-Type': 'application/json',\r\n//    'Access-Control-Allow-Origin':'*'\r\n//  })\r\n//};\r\n\r\n@Injectable()\r\nexport class AppService {\r\n\r\n  constructor(private httpClient: HttpClient, private appSettings: AppSettings) {\r\n\r\n  }\r\n\r\n\r\n  GetCustomersData(): Observable<any> {\r\n    return this.httpClient.get(this.appSettings.API_CustomersURL + '/customers');\r\n  }\r\n\r\n  GetProductsData(): Observable<any> {\r\n    return this.httpClient.get(this.appSettings.API_ProductsURL + '/products');\r\n  }\r\n\r\n  GetCustomersDataFromAPIGateway(): Observable<any> {\r\n    return this.httpClient.get(this.appSettings.API_ApiGatewayURL + '/customers');\r\n  }\r\n\r\n  GetProductsDataFromAPIGateway(): Observable<any> {\r\n    return this.httpClient.get(this.appSettings.API_ApiGatewayURL + '/products');\r\n  }\r\n    \r\n}\r\n","export class AppSettings {\r\n  public API_CustomersURL: string = \"https://localhost:44300/api\";\r\n  public API_ProductsURL: string = \"https://localhost:44302/api\";\r\n  public API_ApiGatewayURL: string = \"https://localhost:44304/api\";\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}